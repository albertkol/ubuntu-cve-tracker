import os
from http.cookiejar import MozillaCookieJar

from macaroonbakery import httpbakery


def run(url, request, payload=None):
    client = httpbakery.Client(cookies=MozillaCookieJar(".login"))

    if os.path.exists(client.cookies.filename):
        client.cookies.load(ignore_discard=True)

    if payload:
        response = client.request(request, url=url, json=payload)
    else:
        response = client.request(request, url=url)

    client.cookies.save(ignore_discard=True)
    print(response, response.text)


new_release = {
    "name": "New Version",
    "version": "30.30",
    "codename": "version",
    "lts": False,
    "development": True,
    "release_date": "2021-04-22",
    "esm_expires": "2022-01-31",
    "support_expires": "2022-01-31",
}

hippo = {
    "name": "Hirsute Hippo",
    "version": "21.04",
    "codename": "hirsute",
    "lts": False,
    "development": True,
    "release_date": "2021-04-22",
    "esm_expires": "2022-01-31",
    "support_expires": "2022-01-31",
}


# RELEASE TESTS
base_url = "http://0.0.0.0:8030/security"

print("Test create release => 200")
run(f"{base_url}/releases.json", "POST", new_release)

print("Test edit release => 404")
run(f"{base_url}/releases/no-exist.json", "PUT", new_release)

print("Test edit release => 422")
hippo["name"] = "Bionic Beaver"
run(f"{base_url}/releases/hirsute.json", "PUT", hippo)

print("Test edit release => 200")
hippo["name"] = "Hirsute Hippo"
hippo["development"] = True
run(f"{base_url}/releases/hirsute.json", "PUT", hippo)

print("Test delete non-existing release => 404")
run(f"{base_url}/releases/no-exist.json", "DELETE")

print("Test delete release => 200")
run(f"{base_url}/releases/version.json", "DELETE")
