# Standard library
import gzip
import io
import json
import os

# Packages
import requests


class JsonStore:
    def __init__(self, filename):
        self.filename = filename

        # Ensure directory exists
        os.makedirs(os.path.dirname(filename), exist_ok=True)

    def get(self, key):
        if not os.path.exists(self.filename):
            return None

        with open(self.filename) as etags_file:
            return json.load(etags_file).get(key)

    def set(self, key, value):
        mapping = {}

        if os.path.exists(self.filename):
            with open(self.filename) as json_file:
                mapping = json.load(json_file)

        mapping[key] = value

        with open(self.filename, "w") as json_file:
            json.dump(mapping, json_file)


def download_gzip_file(url, output_filename, etag_store):
    if not os.path.exists(output_filename):
        etag_store.set(output_filename, None)

    main_response = requests.get(
        url, headers={"If-None-Match": etag_store.get(output_filename)}
    )

    if main_response.status_code != 304:
        main_io = io.BytesIO(main_response.content)

        with gzip.GzipFile(fileobj=main_io) as unzipped:
            os.makedirs(os.path.dirname(output_filename), exist_ok=True)
            with open(output_filename, "wb") as main_file:
                main_file.write(unzipped.read())

        etag_store.set(output_filename, main_response.headers["Etag"])

        return True

    return False
